<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
                    xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters;assembly=HunterPie.UI"
                    xmlns:effects="clr-namespace:HunterPie.UI.Controls.Effects;assembly=HunterPie.UI"
                    xmlns:progress="clr-namespace:HunterPie.UI.Overlay.Controls.Progress;assembly=HunterPie.UI"
                    xmlns:markup="clr-namespace:HunterPie.UI.Architecture.Markup;assembly=HunterPie.UI"
                    xmlns:buttons="clr-namespace:HunterPie.UI.Controls.Buttons;assembly=HunterPie.UI">
    <!-- Converters -->
    <converters:EnumToStringConverter x:Key="EnumToStringConverter"/>
    

    <LinearGradientBrush x:Key="MonsterHealthUnenraged" EndPoint="1,1" StartPoint="0,1">
        <GradientStop Color="#FF4B8EEE"/>
        <GradientStop Color="#FF10B9DE" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MonsterHealthUnenragedDelayed" Color="#FF9CE4FF"/>
    
    <LinearGradientBrush x:Key="MONSTER_PART_BREAKABLE_FOREGROUND" EndPoint="1,1" StartPoint="0,1">
        <GradientStop Color="#FFFBB623"/>
        <GradientStop Color="#FFFFCC72" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MONSTER_PART_SEVERABLE_FOREGROUND" EndPoint="1,1" StartPoint="0,1">
        <GradientStop Color="#FFDE1010"/>
        <GradientStop Color="#FFEE4B4B" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MONSTER_PART_BROKEN_FOREGROUND" EndPoint="1,1" StartPoint="0,1">
        <GradientStop Color="#FF3D3D3D"/>
        <GradientStop Color="#FF8A8A8A" Offset="1"/>
    </LinearGradientBrush>

    <!-- Font -->
    <FontFamily x:Key="HUNTERPIE_DEFAULT_FONT">Work Sans, Segoe UI, Microsoft Sans Serif</FontFamily>
    <FontFamily x:Key="Font.Default">Work Sans, Segoe UI, Microsoft Sans Serif</FontFamily>

    <!-- Styles -->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Style.Resources>
            <Style TargetType="{x:Type ContentPresenter}">
                <Style.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource Brushes.HunterPie.Background.Primary}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Foreground.Primary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.HunterPie.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxWidth" Value="350"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             From="0"
                                             Duration="0:0:0.25"/>
                            <DoubleAnimation Storyboard.TargetProperty="VerticalOffset"
                                                From="-35"
                                                Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" 
                            Background="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" 
                    Grid.RowSpan="3" 
                    CornerRadius="2" 
                    Background="{DynamicResource Brushes.HunterPie.Background.Tertiary}"/>
            <RepeatButton Grid.Row="0" 
                          Style="{StaticResource ScrollBarLineButton}" 
                          Height="18" 
                          Command="ScrollBar.LineUpCommand" 
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" 
                   Grid.Row="1" 
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" 
                           Margin="1,1,1,1" 
                           Background="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}" 
                           BorderBrush="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" 
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{StaticResource ScrollBarLineButton}" 
                          Height="18" 
                          Command="ScrollBar.LineDownCommand" 
                          Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" 
                    Grid.ColumnSpan="3" 
                    CornerRadius="2" 
                    Background="{DynamicResource Brushes.HunterPie.Background.Tertiary}"/>
            <RepeatButton Grid.Column="0"  
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="0" 
                          Command="ScrollBar.LineLeftCommand" 
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" 
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" 
                           Margin="1" 
                           Background="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}" 
                           BorderBrush="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" 
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" 
                          Style="{StaticResource ScrollBarLineButton}" 
                          Width="18" 
                          Command="ScrollBar.LineRightCommand" 
                          Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="5" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="5"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"
                                                Grid.Row="0"/>
                        <ScrollBar Grid.Row="0" 
                                   Grid.Column="0"
                                   Name="PART_VerticalScrollBar" 
                                   Value="{TemplateBinding VerticalOffset}" 
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" 
                                   Orientation="Horizontal" 
                                   Grid.Row="1" 
                                   Grid.Column="1" 
                                   Value="{TemplateBinding HorizontalOffset}" 
                                   Maximum="{TemplateBinding ScrollableWidth}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBox style -->
    <ControlTemplate TargetType="ToggleButton" 
                     x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" 
                    Grid.ColumnSpan="2" 
                    Name="Border"
                    BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                    CornerRadius="5" 
                    BorderThickness="1"
                    Background="{DynamicResource Brushes.HunterPie.Background.Primary}"/>
            <Border Grid.Column="1" 
                    Margin="1,1,1,1"  
                    Name="ButtonBorder"
                    CornerRadius="0,5,5,0" 
                    BorderThickness="1, 0, 0, 0"
                    BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                    Background="{DynamicResource Brushes.HunterPie.Background.Secondary}" />

            <Path Name="Arrow" Grid.Column="1"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" 
                  Fill="{DynamicResource Brushes.HunterPie.Accent}"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" 
                        TargetName="ButtonBorder" 
                        Value="{DynamicResource Brushes.HunterPie.Background.Tertiary}"/>
                <Setter Property="Shape.Fill" 
                        TargetName="Arrow" 
                        Value="{DynamicResource Brushes.HunterPie.Foreground.Tertiary}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource White@100}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Gray@400}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Gray@400}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource Brushes.HunterPie.Foreground.Primary}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <effects:CursorHighLight>
                                    <ContentPresenter Margin="2,5"/>
                                </effects:CursorHighLight>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Grid.Column="0"
                                      ClickMode="Press" 
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite" 
                                          Margin="5,3,40,3" 
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" 
                                 Margin="3,3,23,3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" 
                                 Background="Transparent"
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" 
                                            Focusable="False"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" 
                               Placement="Bottom"
                               Focusable="False"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               AllowsTransparency="True"
                               PopupAnimation="Fade">
                            <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder"  
                                        Margin="0,0,0,0"
                                        CornerRadius="5" 
                                        BorderThickness="1,1,1,1"
                                        BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                                        Background="{DynamicResource Brushes.HunterPie.Background.Secondary}"/>
                                <ScrollViewer Margin="0" 
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                    Cursor="Hand"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox -->
    <Style x:Key="{x:Type TextBox}" 
           TargetType="{x:Type TextBox}">
        <Setter Property="CaretBrush" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Foreground.Primary}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border CornerRadius="5"
                            ClipToBounds="True"
                            BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                            BorderThickness="1"
                            Background="{DynamicResource Brushes.HunterPie.Background.Primary}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{DynamicResource Brushes.HunterPie.Error}" 
                            BorderThickness="1"
                            CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Color="{markup:BrushColor Brushes.HunterPie.Error}" 
                                              BlurRadius="10" 
                                              RenderingBias="Performance"
                                              ShadowDepth="0"/>
                        </Border.Effect>
                        <AdornedElementPlaceholder />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox -->
    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="CaretBrush" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Foreground.Primary}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Background="{DynamicResource Brushes.HunterPie.Background.Primary}">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      x:Name="PART_ContentHost"
                                      Background="Transparent"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Highlight -->
    <Style x:Key="StyleHighlight" TargetType="{x:Type Rectangle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0.2" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Slider -->
    <Style x:Key="SliderProgressRightSide" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderBrush="{DynamicResource Brushes.HunterPie.Border}" 
                             BorderThickness="1" 
                             CornerRadius="1"
                             Height="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderProgressLeftSide" 
           TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="1" 
                            CornerRadius="1"
                            Height="2"
                            BorderBrush="{DynamicResource Brushes.HunterPie.Accent}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="13" 
                             Width="13" 
                             Fill="{DynamicResource Brushes.HunterPie.Foreground.Primary}" 
                             Cursor="Hand" 
                             Stroke="{DynamicResource Brushes.HunterPie.Foreground.Primary}" 
                             StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Slider" 
                     TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" 
                               MinHeight="{TemplateBinding MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Track Grid.Row="1" 
                   x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderProgressLeftSide}"  
                                  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderProgressRightSide}"
                                  Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="SliderDefault" 
           TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type lvc:DefaultTooltip}" TargetType="{x:Type lvc:DefaultTooltip}">
        <Setter Property="Background" Value="{DynamicResource Gray@300}"/>
        <Setter Property="Foreground" Value="{DynamicResource White@50}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
        <Setter Property="BulletSize" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="#171717"/>
        <Setter Property="Foreground" Value="#FF9C9C9C"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border">
                        <ContentPresenter ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="{DynamicResource Brushes.HunterPie.Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Font.Default}"/>
    </Style>

    <DataTemplate x:Key="DATA_TEMPLATE_SETTINGS_ENUM_ELEMENT">
        <TextBlock Text="{Binding ., Mode=OneTime, Converter={StaticResource EnumToStringConverter}}"
                   FontFamily="{DynamicResource Font.Default}"/>
    </DataTemplate>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <converters:PercentageToRelativeSizeConverter x:Key="PercentageToRelativeSizeConverter"/>
    <converters:NoRightStrokeConverter x:Key="NoRightStrokeConverter"/>
    <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter"/>

    <Style TargetType="{x:Type progress:Bar}"
           x:Key="DefaultProgressBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid DataContext="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type progress:Bar}}}">
                        <!-- Background bar -->
                        <Border Background="{Binding BackgroundColor, Mode=OneWay}"
                                BorderBrush="{Binding BackgroundBorder, Mode=OneWay}"
                                BorderThickness="{Binding Border, Mode=OneWay}"
                                x:Name="PART_Background"/>

                        <!-- Foreground Bar -->
                        <Border Background="{Binding ForegroundColor, Mode=OneWay}"
                                BorderBrush="{Binding ForegroundBorder, Mode=OneWay}"
                                HorizontalAlignment="Left">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource PercentageToRelativeSizeConverter}">
                                    <Binding Path="Value" Mode="OneWay"/>
                                    <Binding Path="MaxValue" Mode="OneWay"/>
                                    <Binding Path="ActualWidth" Mode="OneWay" ElementName="PART_Background"/>
                                </MultiBinding>
                            </Border.Width>

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualityToBooleanConverter}">
                                                    <Binding Path="Value" Mode="OneWay"/>
                                                    <Binding Path="MaxValue" Mode="OneWay"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="BorderThickness" Value="{Binding Border, Mode=OneWay}"/>
                                        </DataTrigger>

                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualityToBooleanConverter}">
                                                    <Binding Path="Value" Mode="OneWay"/>
                                                    <Binding Path="MaxValue" Mode="OneWay"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="BorderThickness" Value="{Binding Border, Mode=OneWay, Converter={StaticResource NoRightStrokeConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <ContentControl Content="{Binding Content, Mode=OneWay}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderNoHeaderStyle" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="PART_Presenter"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="PART_Presenter"
                                    Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsExpanded"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_Presenter"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type progress:Bar}"
           BasedOn="{StaticResource DefaultProgressBarStyle}"/>
    
</ResourceDictionary>