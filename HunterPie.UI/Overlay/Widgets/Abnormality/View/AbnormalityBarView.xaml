<overlay:Widget x:Class="HunterPie.UI.Overlay.Widgets.Abnormality.View.AbnormalityBarView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:vm="clr-namespace:HunterPie.UI.Overlay.Widgets.Abnormality.ViewModel"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:HunterPie.UI.Overlay.Widgets.Abnormality.View"
                xmlns:controls="clr-namespace:HunterPie.UI.Overlay.Controls"
                xmlns:converter="clr-namespace:HunterPie.UI.Architecture.Converters"
                xmlns:overlay="clr-namespace:HunterPie.UI.Overlay"
                mc:Ignorable="d"
                d:DesignHeight="450" 
                d:DesignWidth="800"
                HorizontalAlignment="Left"
                Loaded="OnLoad"
                Unloaded="OnUnload"
                Style="{DynamicResource Widgets.AbnormalityTray}"
                d:DataContext="{d:DesignInstance vm:AbnormalityBarViewModel}">
    <UserControl.Resources>
        <converter:OrientationToOppositeConverter x:Key="OrientationToOppositeConverter"/>
        <converter:OrientationConverter x:Key="OrientationConverter"/>
        <converter:SecondsToTimeString x:Key="SecondsToTimeString"/>
        <converter:RatioConverter x:Key="RatioConverter"/>
    </UserControl.Resources>
    <Grid>
        <ItemsControl ItemsSource="{Binding Abnormalities, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel ItemHeight="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                               Orientation="{Binding Config.Orientation.Value, Mode=OneWay, Converter={StaticResource OrientationConverter}}">
                        <WrapPanel.Style>
                            <Style TargetType="WrapPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                                        <Setter Property="MaxWidth" Value="{Binding Config.MaxSize.Current, Mode=OneWay}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                                        <Setter Property="MaxHeight" Value="{Binding Config.MaxSize.Current, Mode=OneWay}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </WrapPanel.Style>
                    </WrapPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:AbnormalityViewModel}">
                    <StackPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type WrapPanel}}, Converter={StaticResource OrientationToOppositeConverter}}">
                        <controls:Abnormality Margin="5,2,5,2"
                                             Width="30"
                                             Height="30"/>
                        <TextBlock Foreground="{DynamicResource White@100}"
                                   FontWeight="Medium"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="Black"
                                                  BlurRadius="4" 
                                                  ShadowDepth="0"/>
                            </TextBlock.Effect>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBuildup, Mode=OneWay}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Text" 
                                                        Value="{Binding Timer, Converter={StaticResource SecondsToTimeString}, Mode=OneWay}"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBuildup, Mode=OneWay}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Text">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource RatioConverter}" StringFormat="{}{0:P0}">
                                                            <Binding Path="Timer" 
                                                                     Mode="OneWay"/>
                                                            <Binding Path="MaxTimer" 
                                                                     Mode="OneWay"/>
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsInfinite, Mode=OneWay}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Text" Value="∞"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</overlay:Widget>
