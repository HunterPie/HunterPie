<UserControl x:Class="HunterPie.UI.Overlay.Widgets.Monster.Views.BossMonsterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.Views"
             mc:Ignorable="d"
             xmlns:overlay="clr-namespace:HunterPie.UI.Overlay.Controls"
             xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters"
             xmlns:assets="clr-namespace:HunterPie.UI.Architecture.Assets" 
             xmlns:viewmodels="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.ViewModels" 
             xmlns:animations="clr-namespace:HunterPie.UI.Architecture.Animation"
             xmlns:view="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.Views"
             xmlns:ocomponents="clr-namespace:HunterPie.UI.Overlay.Components"
             xmlns:loading="clr-namespace:HunterPie.UI.Controls.Loading"
             xmlns:selectors="clr-namespace:HunterPie.UI.Architecture.Selectors"
             xmlns:genums="clr-namespace:HunterPie.Core.Game.Enums;assembly=HunterPie.Core"
             d:DataContext="{d:DesignInstance Type=viewmodels:BossMonsterViewModel}"
             IsHitTestVisible="False"
             d:DesignWidth="600">
    <UserControl.Resources>
        <converters:DoubleToDecimalConverter x:Key="DoubleToDecimalConverter"/>
        <converters:MonsterEmToIconConverter x:Key="MonsterEmToIconConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:FloatFloorConverter x:Key="FloatFloorConverter"/>
        <converters:CrownToIconConverter x:Key="CrownToIconConverter"/>
        <converters:CrownToVisibilityConverter x:Key="CrownToVisibilityConverter"/>
        <converters:TargetTypeToVisibility x:Key="TargetTypeToVisibility"/>
        <converters:IsValidPartConverter x:Key="IsValidPartConverter"/>
        <converters:PercentageToLeftMargingDistanceConverter x:Key="PercentageToLeftMargingDistanceConverter"/>

        <LinearGradientBrush x:Key="MonsterHealthEnraged" EndPoint="1,1" StartPoint="0,1">
            <GradientStop Color="#d42c2c"/>
            <GradientStop Color="#e63f29" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MonsterHealthEnragedDelayed" Color="#FFEB6C5B"/>

        <Style x:Key="{x:Type local:BossMonsterAilmentView}" TargetType="{x:Type local:BossMonsterAilmentView}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutomaticallyHideAilments.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutomaticallyHideAilments.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BEHAVIOR_PART_VIEW" TargetType="UserControl">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutoHideParts.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.AutoHideParts.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DataContext.IsActive, RelativeSource={RelativeSource Self}}"
                                   Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Widget.Settings.HideUnknownParts.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}}"
                                   Value="True"/>
                        <Condition Binding="{Binding DataContext.IsKnownPart, RelativeSource={RelativeSource Self}}"
                                   Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="TEMPLATE_PART_DEFAULT">
            <view:BossMonsterPartView Width="200"
                                      Style="{StaticResource BEHAVIOR_PART_VIEW}"/>
        </DataTemplate>

        <DataTemplate x:Key="TEMPLATE_PART_SEVERABLE">
            <view:BossMonsterSeverablePartView Width="200"
                                               Style="{StaticResource BEHAVIOR_PART_VIEW}"/>
        </DataTemplate>

        <DataTemplate x:Key="TEMPLATE_PART_BREAKABLE">
            <view:BossMonsterBreakablePartView Width="200"
                                               Style="{StaticResource BEHAVIOR_PART_VIEW}"/>
        </DataTemplate>

        <DataTemplate x:Key="TEMPLATE_PART_QURIO">
            <view:BossMonsterQurioPartView Width="200"
                                           Style="{StaticResource BEHAVIOR_PART_VIEW}"/>
        </DataTemplate>

        <converters:MonsterPartTypeToDataTemplateConverter x:Key="MonsterPartTypeToDataTemplateConverter"
                                               DefaultTemplate="{StaticResource TEMPLATE_PART_DEFAULT}"
                                               SeverableTemplate="{StaticResource TEMPLATE_PART_SEVERABLE}"
                                               BreakableTemplate="{StaticResource TEMPLATE_PART_BREAKABLE}"
                                               QurioTemplate="{StaticResource TEMPLATE_PART_QURIO}"/>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Margin="50,10,10,9"
              VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        Margin="10,0,0,0">
                <Image Source="{Binding Crown, Mode=OneWay, Converter={StaticResource CrownToIconConverter}}"
                       d:Source="{StaticResource CROWN_MINI}"
                       Height="15"
                       d:Visibility="Visible"
                       Visibility="{Binding Crown, Converter={StaticResource CrownToVisibilityConverter}}"
                       Width="{Binding Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BossMonsterView}}}"
                       Margin="0,0,5,0"/>
                <TextBlock Text="{Binding Name, Mode=OneWay}"
                           d:Text="Dodogama"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left"
                           Foreground="{StaticResource HUNTERPIE_FOREGROUND_PRIMARY}"
                           FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                           FontSize="15">
                    <TextBlock.Effect>
                        <DropShadowEffect Color="Black"
                                      BlurRadius="4" 
                                      ShadowDepth="0"/>
                    </TextBlock.Effect>
                </TextBlock>
            </StackPanel>
            <!-- Stamina Bar -->
            <overlay:Bar Height="8"
                         MaxValue="{Binding MaxStamina, Mode=OneWay}"
                         d:MaxValue="100"
                         Background="#B2181A1B"
                         Value="{Binding Stamina, Mode=OneWay}"
                         d:Value="50"
                         VerticalAlignment="Top" 
                         BorderThickness="2"
                         RenderTransformOrigin="0.5,0.5"
                         Margin="13,47,10,0" 
                         ForegroundDelayed="#FFFFCFA8" 
                         BorderBrush="#C7212426"
                         Visibility="{Binding Widget.Settings.EnableStamina.Value, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <overlay:Bar.Foreground>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                        <GradientStop Color="#FFFF9A36" Offset="1"/>
                        <GradientStop Color="#FFFF2E00" Offset="0"/>
                    </LinearGradientBrush>
                </overlay:Bar.Foreground>
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="-45"/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
            </overlay:Bar>

            <TextBlock VerticalAlignment="Top"
                       HorizontalAlignment="Right"
                       Margin="0,55,15,0"
                       Foreground="#FFF3F3F3"
                       FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                       FontWeight="Medium"
                       FontSize="13"
                       Visibility="{Binding Widget.Settings.EnableStamina.Value, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Effect>
                    <DropShadowEffect Color="Black"
                                      BlurRadius="4" 
                                      ShadowDepth="0"/>
                </TextBlock.Effect>
            <Run Text="{Binding Stamina, Mode=OneWay, StringFormat=\{0:F0\}}"
                 d:Text="25000"
                 FontWeight="Normal"/><!--
         --><Run Text="/"/><!--
         --><Run Text="{Binding MaxStamina, Mode=OneWay, StringFormat=\{0:F0\}}"
                 d:Text="25000" 
                 FontWeight="Light"
                 Foreground="{StaticResource HUNTERPIE_FOREGROUND_SECONDARY}"/>
            </TextBlock>

            <!-- Health bar -->
            <overlay:Bar Height="15"
                         Foreground="{StaticResource MonsterHealthUnenraged}"
                         ForegroundDelayed="{StaticResource MonsterHealthUnenragedDelayed}"
                         MaxValue="{Binding MaxHealth, Mode=OneWay}"
                         Background="#B2181A1B"
                         d:MaxValue="100"
                         Value="{Binding Health, Mode=OneWay}"
                         d:Value="50"
                         BorderThickness="2"
                         VerticalAlignment="Top" 
                         RenderTransformOrigin="0.5,0.5"
                         Margin="10,32,10,0" 
                         BorderBrush="#C7212426">
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="45"/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
                <overlay:Bar.Style>
                    <Style TargetType="{x:Type overlay:Bar}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnraged}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard >
                                            <animations:BrushAnimation Storyboard.TargetProperty="Foreground"
                                                                       To="{StaticResource MonsterHealthEnraged}"
                                                                       Duration="0:0:0.2"/>
                                            <animations:BrushAnimation Storyboard.TargetProperty="ForegroundDelayed"
                                                                       To="{StaticResource MonsterHealthEnragedDelayed}"
                                                                       Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard >
                                            <animations:BrushAnimation Storyboard.TargetProperty="Foreground"
                                                                       To="{StaticResource MonsterHealthUnenraged}"
                                                                       Duration="0:0:0.2"/>
                                            <animations:BrushAnimation Storyboard.TargetProperty="ForegroundDelayed"
                                                                       To="{StaticResource MonsterHealthUnenragedDelayed}"
                                                                       Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </overlay:Bar.Style>
            </overlay:Bar>

            <TextBlock VerticalAlignment="Top"
                       HorizontalAlignment="Left"
                       Margin="10,15,0,0"
                       Foreground="#FFF3F3F3"
                       FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                       FontWeight="Medium"
                       FontSize="16">
                <TextBlock.Effect>
                    <DropShadowEffect Color="Black"
                                      BlurRadius="4" 
                                      ShadowDepth="0"/>
                </TextBlock.Effect>
            <Run Text="{Binding Health, Mode=OneWay, StringFormat=\{0:F1\}}"
                 d:Text="25000.0"
                 FontWeight="Normal"/>
            <Run Text="/"/>
            <Run Text="{Binding MaxHealth, Mode=OneWay, StringFormat=\{0:F1\}}"
                 d:Text="25000.0" 
                 FontWeight="Light"
                 Foreground="{StaticResource HUNTERPIE_FOREGROUND_SECONDARY}"/>
            </TextBlock>

            <TextBlock VerticalAlignment="Top"
                   HorizontalAlignment="Right"
                   Margin="0,15,20,0"
                   Foreground="#FFF3F3F3"
                   FontFamily="{StaticResource HUNTERPIE_DEFAULT_FONT}"
                   FontWeight="Medium">
                <TextBlock.Effect>
                    <DropShadowEffect Color="Black"
                                      BlurRadius="4" 
                                      ShadowDepth="0"/>
                </TextBlock.Effect>
            <Run Text="{Binding HealthPercentage, Mode=OneWay, Converter={StaticResource FloatFloorConverter}}"
                 d:Text="90"
                 FontWeight="Normal"
                 FontSize="16"/><!--
         --><Run Text="{Binding HealthPercentage, Mode=OneWay, Converter={StaticResource DoubleToDecimalConverter}, StringFormat={}.{0:D2}%}"
                 d:Text=".63%" 
                 FontWeight="Light"
                 Foreground="{StaticResource HUNTERPIE_FOREGROUND_SECONDARY}"/>
            </TextBlock>

            <!-- Capture tick -->
            <StackPanel Orientation="Vertical"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        Visibility="{Binding CanBeCaptured, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                        d:Margin="200,30,0,0">
                <Image Source="{StaticResource ICON_FUNNEL}"
                       Height="10"
                       Width="10"/>
                <StackPanel.Margin>
                    <MultiBinding Converter="{StaticResource PercentageToLeftMargingDistanceConverter}" ConverterParameter="0,30,0,0">
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Grid}}"/>
                        <Binding Path="DataContext.CaptureThreshold" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:BossMonsterView}}"/>
                    </MultiBinding>
                </StackPanel.Margin>
            </StackPanel>
        </Grid>

        <!-- Capture indicator -->
        <Image Source="{StaticResource ICON_TRAP}"
               Height="25"
               Width="25"
               VerticalAlignment="Top"
               HorizontalAlignment="Right"
               Margin="0,2,30,0"
               Visibility="{Binding IsCapturable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <!-- Monster Icon -->
        <Grid Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Margin="20,37,0,0"
              Height="40">
            <Rectangle Fill="#FF191A1B"
                       RenderTransformOrigin="0.5,0.5" 
                       Stroke="#FF343434">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="45"/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>

            <Image d:Source="{assets:MonsterIcon World_16}"
                   Width="40"
                   RenderOptions.BitmapScalingMode="Fant">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoadingIcon}" Value="False">
                                <Setter Property="Source" Value="{Binding Icon, Mode=OneWay, TargetNullValue={assets:MonsterIcon Rise_Unknown}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <loading:CircleLoading Height="15"
                                   Width="15"
                                   Visibility="{Binding IsLoadingIcon, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>

        <!-- Weaknesses -->
        <ItemsControl ItemsSource="{Binding Weaknesses, Mode=OneWay}"
                      d:DataContext="{x:Static viewmodels:DesignModeViewModels.MockBossMonsterViewModel}"
                      VerticalAlignment="Top"
                      HorizontalAlignment="Left"
                      Margin="60,67,0,0">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type genums:Element}">
                    <local:BossMonsterWeaknessView Width="20"
                                                   Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                                   Margin="2,0,0,0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <StackPanel Grid.Row="1"
                    Orientation="Vertical"
                    x:Name="PART_Bottom"
                    Margin="0,90,0,0"
                    Visibility="{Binding TargetType, Converter={StaticResource TargetTypeToVisibility}}">
            
            <!-- Ailments -->
            <ItemsControl ItemsSource="{Binding Ailments, Mode=OneWay, NotifyOnSourceUpdated=True}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   Visibility="{Binding Widget.Settings.EnableAilments.Value, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:MonsterAilmentViewModel}">
                        <view:BossMonsterAilmentView Width="80"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Parts -->
            <ItemsControl ItemsSource="{Binding Parts, Mode=OneWay, NotifyOnSourceUpdated=True}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   Visibility="{Binding Widget.Settings.EnableParts.Value, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ocomponents:WidgetBase}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentPresenter ContentTemplate="{Binding Type, Converter={StaticResource MonsterPartTypeToDataTemplateConverter}}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
