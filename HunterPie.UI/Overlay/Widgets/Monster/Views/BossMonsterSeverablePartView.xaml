<UserControl x:Class="HunterPie.UI.Overlay.Widgets.Monster.Views.BossMonsterSeverablePartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters"
             xmlns:overlay="clr-namespace:HunterPie.UI.Overlay.Controls"
             xmlns:vm="clr-namespace:HunterPie.UI.Overlay.Widgets.Monster.ViewModels"
             d:DataContext="{d:DesignData Type=vm:MonsterPartViewModel}"
             mc:Ignorable="d" 
             d:DesignWidth="200">
    <UserControl.Resources>
        <converters:MonsterPartIdToNameConverter x:Key="MonsterPartIdToNameConverter"/>
    </UserControl.Resources>
    <Grid>
        <TextBlock Text="{Binding Name, Converter={StaticResource MonsterPartIdToNameConverter}, Mode=OneTime}"
                   d:Text="Head"
                   Foreground="{StaticResource White}"
                   FontFamily="{StaticResource Font.Default}"
                   FontSize="14"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Left"
                   Margin="35,0,0,0">
            <TextBlock.Effect>
                <DropShadowEffect Color="Black"
                                      BlurRadius="4" 
                                      ShadowDepth="0"/>
            </TextBlock.Effect>
        </TextBlock>

        <Grid Margin="30,15,0,0">

            <!-- Flinch Bar -->
            <overlay:Bar d:Foreground="{StaticResource Brushes.Widgets.Monster.Part.Breakable.Foreground}"
                         d:ForegroundDelayed="{StaticResource Brushes.Widgets.Monster.Health.Default.Background}"
                         Height="5"
                         VerticalAlignment="Top"
                         Margin="4.5,0,5,0"
                         Background="{StaticResource Gray@500}"
                         d:Value="50"
                         d:MaxValue="100"
                         BorderThickness="0"
                         RenderTransformOrigin="0.5,0.5">
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="45"/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
                <overlay:Bar.Style>
                    <Style TargetType="overlay:Bar">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPartBroken}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource Brushes.Widgets.Monster.Health.Default}"/>
                                <Setter Property="ForegroundDelayed" Value="{StaticResource Brushes.Widgets.Monster.Health.Default.Background}"/>
                                <Setter Property="MaxValue" Value="{Binding MaxFlinch, Mode=OneWay}"/>
                                <Setter Property="Value" Value="{Binding Flinch, Mode=OneWay}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPartBroken}" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource Brushes.Widgets.Monster.Part.Breakable.Foreground}"/>
                                <Setter Property="ForegroundDelayed" Value="{StaticResource Brushes.Widgets.Monster.Part.Breakable.Background}"/>
                                <Setter Property="MaxValue" Value="{Binding MaxHealth, Mode=OneWay}"/>
                                <Setter Property="Value" Value="{Binding Health, Mode=OneWay}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </overlay:Bar.Style>
            </overlay:Bar>
            
            <!-- Sever bar -->
            <overlay:Bar d:Foreground="{StaticResource Brushes.Widgets.Monster.Part.Severable.Foreground}"
                         d:ForegroundDelayed="{StaticResource Brushes.Widgets.Monster.Part.Severable.Background}"
                         Height="5"
                         VerticalAlignment="Top"
                         Margin="4.5,5,5,0"
                         Background="{StaticResource Gray@500}"
                         MaxValue="{Binding MaxSever, Mode=OneWay}"
                         Value="{Binding Sever, Mode=OneWay}"
                         d:Value="50"
                         d:MaxValue="100"
                         BorderThickness="0"
                         RenderTransformOrigin="0.5,0.5">
                <overlay:Bar.RenderTransform>
                    <TransformGroup>
                        <SkewTransform AngleX="-45"/>
                    </TransformGroup>
                </overlay:Bar.RenderTransform>
                <overlay:Bar.Style>
                    <Style TargetType="overlay:Bar">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPartSevered}" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource Brushes.Widgets.Monster.Part.Severable.Foreground}"/>
                                <Setter Property="ForegroundDelayed" Value="{StaticResource Brushes.Widgets.Monster.Part.Severable.Background}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPartSevered}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource Brushes.Widgets.Monster.Part.Broken.Foreground}"/>
                                <Setter Property="ForegroundDelayed" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </overlay:Bar.Style>
            </overlay:Bar>

            <Label Foreground="{StaticResource White}"
                   FontFamily="{StaticResource Font.Default}"
                   FontSize="14"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center"
                   d:Content="2000.0/2000.0"
                   Margin="0,8,0,0" Padding="0,0,0,0">
                <Label.Effect>
                    <DropShadowEffect Color="Black"
                                      BlurRadius="2"
                                      ShadowDepth="0"/>
                </Label.Effect>
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Triggers>
                            <!-- When part is severed but not broken -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPartSevered}" Value="True"/>
                                    <Condition Binding="{Binding IsPartBroken}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                           <Run Text="{Binding Health, StringFormat=\{0:F1\}}"
                                                d:Text="2000.0"/><!--
                                        --><Run Text="/"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"/><!--
                                        --><Run Text="{Binding MaxHealth, StringFormat=\{0:F1\}}"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"
                                                d:Text="2000.0"/>
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!-- When part is severed and broken -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPartSevered}" Value="True"/>
                                    <Condition Binding="{Binding IsPartBroken}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>
                                           <Run Text="{Binding Flinch, StringFormat=\{0:F1\}}"
                                                d:Text="2000.0"/><!--
                                        --><Run Text="/"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"/><!--
                                        --><Run Text="{Binding MaxFlinch, StringFormat=\{0:F1\}}"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"
                                                d:Text="2000.0"/>
                                            </TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsPartSevered}" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <TextBlock>
                                           <Run Text="{Binding Sever, StringFormat=\{0:F1\}}"
                                                d:Text="2000.0"/><!--
                                        --><Run Text="/"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"/><!--
                                        --><Run Text="{Binding MaxSever, StringFormat=\{0:F1\}}"
                                                Foreground="{StaticResource White@200}"
                                                FontWeight="Light"
                                                d:Text="2000.0"/>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
                
            </Label>
        </Grid>
    </Grid>
</UserControl>
