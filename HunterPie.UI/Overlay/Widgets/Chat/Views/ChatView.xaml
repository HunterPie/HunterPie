<overlay:Widget x:Class="HunterPie.UI.Overlay.Widgets.Chat.Views.ChatView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:native="clr-namespace:HunterPie.UI.Controls.Buttons"
                xmlns:vm="clr-namespace:HunterPie.UI.Overlay.Widgets.Chat.ViewModels"
                d:DataContext="{d:DesignInstance Type=vm:ChatViewModel}"
                xmlns:local="clr-namespace:HunterPie.UI.Overlay.Widgets.Chat.Views"
                xmlns:overlay="clr-namespace:HunterPie.UI.Overlay"
                xmlns:brushes="clr-namespace:HunterPie.UI.Architecture.Converters.Brushes"
                Width="400"
                Height="200"
                mc:Ignorable="d"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                Style="{DynamicResource Widgets.Chat}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <brushes:BrushOpacityConverter x:Key="BrushOpacityConverter"/>

        <DataTemplate x:Key="PanelTemplate" DataType="{x:Type vm:ChatCategoryViewModel}">
            <ItemsControl ItemsSource="{Binding Elements}">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Hidden"
                                      Margin="2,0,2,0"
                                      ScrollChanged="OnScrollChanged">
                            <VirtualizingStackPanel Orientation="Vertical"
                                                    IsItemsHost="True"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ItemsControl.Template>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:ChatStringView Margin="1">
                            <local:ChatStringView.Style>
                                <Style TargetType="{x:Type local:ChatStringView}">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                            From="50,1,1,1"
                                                                            To="1,1,1,1"
                                                                            Duration="0:0:0.250"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                         From="0"
                                                                         To="1"
                                                                         Duration="0:0:0.500"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </local:ChatStringView.Style>
                        </local:ChatStringView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplate" 
                      DataType="{x:Type vm:ChatCategoryViewModel}">
            <native:TabItem Title="{Binding Name}"
                            Description="{Binding Description}"
                            Icon="{Binding Icon}"
                            Background="Transparent"
                            FontSize="13"
                            BorderThickness="0" 
                            Foreground="{StaticResource White@100}"/>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Background="{Binding Source={StaticResource Gray@200}, Converter={StaticResource BrushOpacityConverter}, ConverterParameter={StaticResource Widgets.Background.Opacity}}"
          Visibility="{Binding IsChatOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Border BorderThickness="1"
                BorderBrush="{StaticResource Brushes.HunterPie.Accent.Transparent}"
                CornerRadius="5"
                Padding="5">
            <TabControl ItemsSource="{Binding Categories, Mode=OneWay}"
                        ItemTemplate="{StaticResource HeaderTemplate}"
                        ContentTemplate="{StaticResource PanelTemplate}"
                        d:DataContext="{StaticResource MockChatViewModel}"
                        SelectedIndex="0"
                        Background="Transparent"
                        BorderThickness="0"
                        Padding="0"/>
        </Border>
    </Grid>
</overlay:Widget>
