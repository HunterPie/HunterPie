<UserControl x:Class="HunterPie.Features.Theme.Views.InstalledThemeHomeTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HunterPie.Features.Theme.Views"
             xmlns:viewModels="clr-namespace:HunterPie.Features.Theme.ViewModels"
             xmlns:viewer="clr-namespace:HunterPie.UI.Controls.Viewer;assembly=HunterPie.UI"
             xmlns:buttons="clr-namespace:HunterPie.UI.Controls.Buttons;assembly=HunterPie.UI"
             xmlns:image="clr-namespace:HunterPie.UI.Controls.Image;assembly=HunterPie.UI"
             xmlns:markup="clr-namespace:HunterPie.UI.Architecture.Markup;assembly=HunterPie.UI"
             xmlns:display="clr-namespace:HunterPie.UI.Controls.Display;assembly=HunterPie.UI"
             xmlns:loading="clr-namespace:HunterPie.UI.Controls.Loading;assembly=HunterPie.UI"
             xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters;assembly=HunterPie.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModels:InstalledThemeHomeTabViewModel}"
             MouseMove="OnMouseMove"
             PreviewMouseLeftButtonUp="OnLeftMouseUp"
             MouseLeave="OnMouseLeave"
             AllowDrop="True"
             Loaded="OnElementsPanelLoaded">
    <UserControl.Resources>
        <converters:ConverterPipeline x:Key="InverseNumberToVisibilityConverter">
            <converters:NumberToBooleanConverter/>
            <converters:InverseBooleanToVisibilityConverter/>
        </converters:ConverterPipeline>
    </UserControl.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" 
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <buttons:Button Padding="5,0"
                            Margin="2"
                            Background="{DynamicResource Brushes.HunterPie.Background.Primary}"
                            BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                            BorderThickness="1"
                            CornerRadius="5"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Click="OnRefreshButtonClicked">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <image:Icon Grid.Column="0"
                                Image="{StaticResource Icons.Refresh}"
                                Foreground="{DynamicResource Brushes.HunterPie.Foreground.Primary}"
                                Margin="5"/>

                    <TextBlock Grid.Column="1"
                               Text="{markup:Localization '//Strings/Client/Generics/Generic[@Id=&quot;REFRESH_STRING&quot;]'}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource Brushes.HunterPie.Foreground.Primary}"/>
                </Grid>
            </buttons:Button>
            <buttons:Button Content="{markup:Localization '//Strings/Client/Generics/Generic[@Id=&quot;INSTALL_STRING&quot;]'}"
                            Padding="10,5"
                            Margin="2"
                            Background="{DynamicResource Brushes.HunterPie.Accent.Solid}"
                            BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Click="OnInstallButtonClicked"/>
        </StackPanel>

        <display:Conditional Grid.Row="1"
                             Condition="{Binding IsRefreshing, Mode=OneWay}"
                             d:Condition="True">
            <!-- Loading skeleton -->
            <display:Conditional.Component>
                <DataTemplate>
                    <ItemsControl ItemsSource="{markup:CreateCollection ItemsCount=10}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel CanVerticallyScroll="False"
                                            IsItemsHost="True"
                                            Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:InstalledThemeViewSkeleton Height="80"
                                                                  Margin="2"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </display:Conditional.Component>

            <!-- Themes -->
            <display:Conditional.Otherwise>
                <DataTemplate>
                    <Grid>
                        <Border Background="{DynamicResource Brushes.HunterPie.Background.Secondary}"
                                BorderBrush="{DynamicResource Brushes.HunterPie.Border}"
                                BorderThickness="1"
                                CornerRadius="5"
                                Padding="10"
                                Visibility="{Binding Themes.Count, Converter={StaticResource InverseNumberToVisibilityConverter}}">
                            <StackPanel>
                                <image:Icon Image="{StaticResource Visuals.ThemeBoy}"
                                            Foreground="{DynamicResource Brushes.HunterPie.Foreground.Secondary}"
                                            Opacity="0.5"
                                            Height="250"/>
                                <TextBlock Text="{markup:Localization '//Strings/Client/Generics/Generic[@Id=&quot;NO_THEMES_FOUND_STRING&quot;]'}"
                                           Foreground="{DynamicResource Brushes.HunterPie.Foreground.Secondary}"
                                           FontSize="14"
                                           TextAlignment="Center"
                                           HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        

                        <ItemsControl ItemsSource="{Binding Themes, Mode=OneTime}"
                                      d:ItemsSource="{d:SampleData ItemCount=10}">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <viewer:SmoothScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel IsItemsHost="True"/>
                                    </viewer:SmoothScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:InstalledThemeView Margin="2"
                                                              BeginDrag="OnElementBeginDrag"
                                                              Toggle="OnThemeToggle"
                                                              Height="80"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DataTemplate>
            </display:Conditional.Otherwise>
        </display:Conditional>
    </Grid>
</UserControl>
