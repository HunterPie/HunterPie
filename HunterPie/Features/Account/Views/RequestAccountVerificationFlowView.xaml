<architecture:View x:TypeArguments="viewModels:AccountVerificationResendFlowViewModel"
                   x:Class="HunterPie.Features.Account.Views.RequestAccountVerificationFlowView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:buttons="clr-namespace:HunterPie.UI.Controls.Buttons;assembly=HunterPie.UI"
                   xmlns:image="clr-namespace:HunterPie.UI.Controls.Image;assembly=HunterPie.UI"
                   xmlns:architecture="clr-namespace:HunterPie.UI.Architecture;assembly=HunterPie.UI"
                   xmlns:validation="clr-namespace:HunterPie.UI.Architecture.Validation;assembly=HunterPie.UI"
                   xmlns:loading="clr-namespace:HunterPie.UI.Controls.Loading;assembly=HunterPie.UI"
                   xmlns:viewModels="clr-namespace:HunterPie.Features.Account.ViewModels"
                   xmlns:local="clr-namespace:HunterPie.Features.Account.Views"
                   mc:Ignorable="d" 
                   d:DesignHeight="450" 
                   d:DesignWidth="400"
                   d:DataContext="{d:DesignInstance viewModels:AccountVerificationResendFlowViewModel}"
                   x:ClassModifier="internal">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical"
                Visibility="{Binding IsFlowActive, Converter={StaticResource BooleanToVisibilityConverter}}">
        <buttons:Button HorizontalAlignment="Left"
                        Padding="5"
                        Width="30"
                        Height="30"
                        Margin="2"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Click="OnBackButtonClick">
            <image:Icon Image="{StaticResource ICON_BACK}"
                        Foreground="{StaticResource WHITE_400}"/>
        </buttons:Button>

        <!-- Email -->
        <StackPanel Orientation="Vertical"
                    Margin="10,5,10,10">
            <TextBlock Text="Email"
                       Foreground="{StaticResource WHITE_200}"
                       Margin="0,0,0,1"/>
            <TextBox Height="35">
                <TextBox.Text>
                    <Binding Path="Email"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True"
                             ValidatesOnNotifyDataErrors="True"
                             NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validation:EmailValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <buttons:Button Content="Resend verification"
                            FontSize="15"
                            BorderBrush="{StaticResource GRAY}"
                            CornerRadius="5"
                            BorderThickness="1"
                            HorizontalAlignment="Right"
                            Padding="20,8,20,8"
                            Margin="0,10,0,0"
                            Click="OnResendVerificationButtonClick"
                            Cursor="Hand"
                            IsEnabled="{Binding CanRequestVerification, Mode=OneWay}">
                <buttons:Button.Style>
                    <Style TargetType="buttons:Button">
                        <Setter Property="Content" Value="Update password"/>
                        <Setter Property="Padding" Value="20,8,20,8"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.IsRequestingVerification, RelativeSource={RelativeSource AncestorType={x:Type local:RequestAccountVerificationFlowView}}}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <loading:CircleLoading Height="20"
                                                               Width="20"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </buttons:Button.Style>
            </buttons:Button>
        </StackPanel>
    </StackPanel>
</architecture:View>