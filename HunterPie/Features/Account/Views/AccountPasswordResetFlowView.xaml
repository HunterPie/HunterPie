<arch:View x:Class="HunterPie.Features.Account.Views.AccountPasswordResetFlowView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:validations="clr-namespace:HunterPie.UI.Architecture.Validation;assembly=HunterPie.UI"
           xmlns:loading="clr-namespace:HunterPie.UI.Controls.Loading;assembly=HunterPie.UI"
           xmlns:buttons="clr-namespace:HunterPie.UI.Controls.Buttons;assembly=HunterPie.UI"
           xmlns:textbox="clr-namespace:HunterPie.UI.Controls.TextBox;assembly=HunterPie.UI"
           xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters;assembly=HunterPie.UI"
           xmlns:system="clr-namespace:System;assembly=mscorlib"
           xmlns:arch="clr-namespace:HunterPie.UI.Architecture;assembly=HunterPie.UI"
           xmlns:image="clr-namespace:HunterPie.UI.Controls.Image;assembly=HunterPie.UI"
           xmlns:viewModels="clr-namespace:HunterPie.Features.Account.ViewModels"
           xmlns:local="clr-namespace:HunterPie.Features.Account.Views"
           mc:Ignorable="d" 
           d:DesignHeight="450" 
           d:DesignWidth="400"
           d:DataContext="{d:DesignInstance viewModels:AccountPasswordResetFlowViewModel}"
           x:TypeArguments="viewModels:AccountPasswordResetFlowViewModel" 
           x:ClassModifier="internal">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
    </UserControl.Resources>
    <StackPanel Visibility="{Binding IsFlowActive, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
        <buttons:Button HorizontalAlignment="Left"
                        Padding="5"
                        Width="30"
                        Height="30"
                        Margin="2"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Click="OnBackButtonClick">
            <image:Icon Image="{StaticResource ICON_BACK}"
                        Foreground="{StaticResource WHITE_400}"/>
        </buttons:Button>
        <!-- Email -->
        <StackPanel Orientation="Vertical"
                    Margin="10,5,10,10">
            <TextBlock Text="Email"
                       Foreground="{StaticResource WHITE_200}"
                       Margin="0,0,0,1"/>
            <TextBox Height="35">
                <TextBox.Text>
                    <Binding Path="Email"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True"
                             ValidatesOnNotifyDataErrors="True"
                             NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validations:EmailValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <buttons:Button Content="Send Code"
                            FontSize="14"
                            Foreground="{StaticResource HUNTERPIE_ACCENT_COLOR}"
                            BorderBrush="{StaticResource HUNTERPIE_ACCENT_COLOR}"
                            BorderThickness="1"
                            HorizontalAlignment="Right"
                            Padding="5"
                            Margin="0,10,0,0"
                            Click="OnSendCodeButtonClick"/>
        </StackPanel>

        <StackPanel Orientation="Vertical"
                    Margin="10,10,10,10"
                    Visibility="{Binding HasCodeBeenSent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="Code"
                       Foreground="{StaticResource WHITE_200}"
                       Margin="0,0,0,1"/>
            <TextBox Height="35"
                     IsEnabled="{Binding IsResetInProgress, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}"
                     d:Text="123456"
                     TextAlignment="Center"
                     MaxLines="1">
                <TextBox.Text>
                    <Binding Path="Code"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True"
                             ValidatesOnNotifyDataErrors="True"
                             NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validations:ByTypeValidationRule ValidatesOnTargetUpdated="True"
                                                              ValidationType="{x:Type system:Int32}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>

        <StackPanel Orientation="Vertical"
                    Margin="10,10,10,10"
                    Visibility="{Binding HasCodeBeenSent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="Password"
                       Foreground="{StaticResource WHITE_200}"
                       Margin="0,0,0,1"/>
            <textbox:SecretTextBox Height="35"
                                   Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   IsEnabled="{Binding IsResetInProgress, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}"/>
        </StackPanel>

        <buttons:Button FontSize="15"
                        HorizontalAlignment="Center"
                        BorderThickness="1"
                        BorderBrush="{StaticResource GRAY}"
                        CornerRadius="5"
                        IsEnabled="{Binding CanChangePassword, Mode=OneWay}"
                        Click="OnPasswordChangeButtonClick"
                        Cursor="Hand"
                        Visibility="{Binding HasCodeBeenSent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <buttons:Button.Style>
                <Style TargetType="buttons:Button">
                    <Setter Property="Content" Value="Update password"/>
                    <Setter Property="Padding" Value="20,8,20,8"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.IsResetInProgress, RelativeSource={RelativeSource AncestorType={x:Type local:AccountPasswordResetFlowView}}}" Value="True">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <loading:CircleLoading Height="20"
                                                           Width="20"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </buttons:Button.Style>
        </buttons:Button>
    </StackPanel>
</arch:View>
