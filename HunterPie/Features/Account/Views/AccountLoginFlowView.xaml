<arch:View x:Class="HunterPie.Features.Account.Views.AccountLoginFlowView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
           xmlns:buttons="clr-namespace:HunterPie.UI.Controls.Buttons;assembly=HunterPie.UI"
           xmlns:textbox="clr-namespace:HunterPie.UI.Controls.TextBox;assembly=HunterPie.UI"
           xmlns:loading="clr-namespace:HunterPie.UI.Controls.Loading;assembly=HunterPie.UI"
           xmlns:arch="clr-namespace:HunterPie.UI.Architecture;assembly=HunterPie.UI"
           xmlns:validations="clr-namespace:HunterPie.UI.Architecture.Validation;assembly=HunterPie.UI"
           xmlns:converters="clr-namespace:HunterPie.UI.Architecture.Converters;assembly=HunterPie.UI"
           xmlns:vm="clr-namespace:HunterPie.Features.Account.ViewModels"
           xmlns:local="clr-namespace:HunterPie.Features.Account.Views"
           x:TypeArguments="vm:AccountLoginFlowViewModel"
           d:DataContext="{d:DesignInstance vm:AccountLoginFlowViewModel}"
           mc:Ignorable="d" 
           d:DesignHeight="450" 
           d:DesignWidth="400"
           PreviewKeyDown="OnPreviewKeyDown" 
           x:ClassModifier="internal">
    <UserControl.Resources>
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <StackPanel d:Visibility="Hidden">
            <StackPanel Orientation="Vertical"
                        Margin="10,20,10,10">
                <TextBlock Text="Email"
                            Foreground="{StaticResource WHITE_200}"
                            Margin="0,0,0,1"/>
                <TextBox Height="35"
                            IsReadOnly="{Binding IsLoggingIn, Mode=OneWay}">
                    <TextBox.Text>
                        <Binding Path="Email"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged"
                                    ValidatesOnDataErrors="True"
                                    ValidatesOnNotifyDataErrors="True"
                                    NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <validations:EmailValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <buttons:Button Content="Resend verification"
                                HorizontalAlignment="Right"
                                Padding="5,10,5,10"
                                Foreground="{StaticResource HUNTERPIE_ACCENT_COLOR}"
                                CornerRadius="5"
                                Click="OnResendVerificationClick"/>
            </StackPanel>

            <StackPanel Orientation="Vertical"
                        Margin="10,10,10,10">
                <TextBlock Text="Password"
                            Foreground="{StaticResource WHITE_200}"
                            Margin="0,0,0,1"/>
                <textbox:SecretTextBox Height="35"
                                        Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding IsLoggingIn, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}"/>
            </StackPanel>

            <UniformGrid Columns="2"
                         Margin="10,0">
                <buttons:Button Content="Forgot password?"
                                FontSize="13"
                                Padding="20,5,20,5"
                                CornerRadius="5"
                                HorizontalAlignment="Center"
                                Click="OnForgotPasswordClick"
                                Foreground="{StaticResource HUNTERPIE_ACCENT_COLOR}"/>

                <buttons:Button FontSize="15"
                                HorizontalAlignment="Right"
                                BorderThickness="1"
                                BorderBrush="{StaticResource GRAY}"
                                CornerRadius="5"
                                OnClick="OnSignInClick"
                                IsEnabled="{Binding CanLogIn, Mode=OneWay}"
                                Cursor="Hand">
                    <buttons:Button.Style>
                        <Style TargetType="buttons:Button">
                            <Setter Property="Content" Value="Sign In"/>
                            <Setter Property="Padding" Value="20,8,20,8"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.IsLoggingIn, RelativeSource={RelativeSource AncestorType={x:Type local:AccountLoginFlowView}}}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <loading:CircleLoading Height="20"
                                                                Width="20"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </buttons:Button.Style>
                </buttons:Button>
            </UniformGrid>

            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AccountVerificationResendFlowViewModel.IsFlowActive, Mode=OneWay}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding PasswordResetFlowViewModel.IsFlowActive, Mode=OneWay}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>

        <local:RequestAccountVerificationFlowView DataContext="{Binding AccountVerificationResendFlowViewModel, Mode=OneTime}"
                                                  d:Visibility="Visible"/>

        <local:AccountPasswordResetFlowView DataContext="{Binding PasswordResetFlowViewModel, Mode=OneTime}"
                                            d:Visibility="Hidden"/>
    </Grid>
</arch:View>
